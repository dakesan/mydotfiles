set -g prefix C-a
unbind C-b

bind | split-window -h
bind - split-window -v

bind  h select-pane -L
bind  j select-pane -D
bind  k select-pane -U
bind  l select-pane -R

set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# ステータスラインの色を変更
setw -g status-style fg=colour255,bg=colour234

set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color:RGB"

run ~/.config/tmux/plugins/catppuccin/tmux/catppuccin.tmux
set -g @catppuccin_flavor 'mocha' # latte, frappe, macchiato or mocha

# Tab-like window display
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator "█"
set -g @catppuccin_window_middle_separator " │ "
set -g @catppuccin_window_number_position "left"

set -g @catppuccin_window_default_fill "all"
set -g @catppuccin_window_default_text " #I:#W "

set -g @catppuccin_window_current_fill "all"
set -g @catppuccin_window_current_text " #I:#W "

# More tab-like appearance
set -g window-status-separator ""
set -g window-status-format "#[fg=#6c7086,bg=#313244] #I:#W #[fg=#313244,bg=#1e1e2e]▌"
set -g window-status-current-format "#[fg=#1e1e2e,bg=#f5c2e7] #I:#W #[fg=#f5c2e7,bg=#1e1e2e]▌"

set -g @catppuccin_status_modules_right "directory user host session"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_directory_text "#{pane_current_path}"

# Pane border styling for better visibility
set -g pane-border-style "fg=#313244"
set -g pane-active-border-style "fg=#f5c2e7,bg=default"
set -g pane-border-lines double
set -g pane-border-indicators colour
set -g pane-border-status top
set -g pane-border-format " #P: #{pane_current_command} "

# Window styling
set -g window-style 'fg=default,bg=#1e1e2e'
set -g window-active-style 'fg=default,bg=#181825'

# Display panes
set -g display-panes-active-colour "#f5c2e7"
set -g display-panes-colour "#6c7086"

# Session info in status bar
set -g status-left "#[fg=#f5c2e7,bg=#313244,bold] #{session_name} #[fg=#313244,bg=#1e1e2e]"
set -g status-right "#[fg=#313244,bg=#1e1e2e]#[fg=#f5c2e7,bg=#313244] Sessions: #{session_many_attached} "
set -g status-justify centre

# Show session count and current session highlighting
set -g @catppuccin_status_modules_right "directory sessions user host"
set -g @catppuccin_status_modules_left "session"

# Aggressive resize for full screen usage
setw -g aggressive-resize on

# Mouse support - enable for text selection but enhanced for status bar
set -g mouse on

# Enhanced mouse support for window (tab) switching on status bar
bind-key -T root MouseDown1Status select-window -t=
bind-key -T root MouseDown1StatusLeft select-window -t 0
bind-key -T root MouseDown1StatusRight select-window -t $
bind-key -T root MouseDown1StatusDefault select-window -t=

# Mouse wheel for window switching on status bar
bind-key -T root WheelUpStatus previous-window
bind-key -T root WheelDownStatus next-window

# Right-click on status bar to create new window
bind-key -T root MouseDown3Status new-window
bind-key -T root MouseDown3StatusDefault new-window

# Disable annoying mouse behaviors while keeping text selection
unbind -T root MouseDown3Pane  # Disable right-click menu in panes
bind-key -T root MouseDown3Pane select-pane -t=  # Just select pane instead

# Window (tab) switching like browser tabs
bind-key n next-window                       # Prefix + n で次のウィンドウ（タブ）
bind-key p previous-window                   # Prefix + p で前のウィンドウ（タブ）

# Session switching with different keys
bind-key s choose-session                    # Prefix + s でセッション選択画面
bind-key ) switch-client -n                  # Prefix + ) で次のセッション
bind-key ( switch-client -p                  # Prefix + ( で前のセッション
bind-key Tab choose-session                  # Prefix + Tab でセッション選択

# Function keys for direct session switching (F1-F8)
bind-key F1 switch-client -t 0
bind-key F2 switch-client -t 1
bind-key F3 switch-client -t 2
bind-key F4 switch-client -t 3
bind-key F5 switch-client -t 4
bind-key F6 switch-client -t 5
bind-key F7 switch-client -t 6
bind-key F8 switch-client -t 7

# Quick session creation with name prompt
bind-key C-s command-prompt -p "New session name:" "new-session -d -s %%"

# Command palette with fzf - like VSCode (Ctrl+Shift+P)
# Test different approaches
# Working command palette based on successful test
# Debug: different ways to call the script
bind-key ? display-popup -E -w 80% -h 80% "bash ~/.config/tmux/tmux-palette.sh"

# Alternative debug (Prefix + `)
bind-key ` display-popup -E -w 80% -h 80% -d "#{pane_current_path}" "bash ~/.config/tmux/tmux-palette.sh"

# Another alternative (Prefix + \)
bind-key \\ run-shell "tmux display-popup -E -w 80% -h 80% 'bash ~/.config/tmux/tmux-palette.sh'"

# Command palette with fzf - call shell script (Prefix + ?)
bind-key ? display-popup -E -w 80% -h 80% "~/.config/tmux/tmux-palette.sh"

# Backup: simple version (Prefix + /)
bind-key / run-shell 'tmux display-popup -E "echo \"Next Window|next-window\nPrevious Window|previous-window\nCreate New Window|new-window\nChoose Window|choose-window\nChoose Session|choose-session\nNext Session|switch-client -n\nPrevious Session|switch-client -p\nDetach Session|detach-client\nSplit Horizontal|split-window -h\nSplit Vertical|split-window -v\nZoom Pane|resize-pane -Z\nCopy Mode|copy-mode\" | fzf --prompt=\"Command Palette: \" --delimiter=\"|\" --with-nth=1 | cut -d\"|\" -f2 | xargs -r tmux"'

# Alternative: direct fzf in tmux (test with Prefix + f)
bind-key f run-shell 'tmux display-popup -E "echo \"Next Window|next-window\nPrevious Window|previous-window\nCreate New Window|new-window\" | fzf"'

# Alternative: simple choose-window replacement (test with Prefix + F)
bind-key F display-popup -E -w 50% -h 50% "tmux list-windows -F '#{window_index}: #{window_name}' | fzf | cut -d: -f1 | xargs -I {} tmux select-window -t {}"

# Alternative: very simple test (test with Prefix + t)
bind-key t display-popup -E "echo 'Hello from tmux popup'; sleep 3"

# Fix key bindings for better terminal compatibility
# Enable application keypad mode for numeric keypad
set -g xterm-keys on

# Fix Page Up/Page Down keys to behave like Home/End in tmux only
# PageUp/PageDown keys behave like Home/End within tmux
bind-key -n PageUp send-keys C-a
bind-key -n PageDown send-keys C-e

# Don't override Home/End keys - let them work normally
# This allows Home/End to work properly outside tmux
# bind-key -n Home send-keys C-a
# bind-key -n End send-keys C-e

# Alternative bindings for Ctrl combinations
bind-key -n C-PageUp send-keys C-a
bind-key -n C-PageDown send-keys C-e

# Fix terminal escape sequences
set -s escape-time 0
set -g assume-paste-time 1

# Enhanced terminal capabilities
set -g focus-events on
set -sa terminal-overrides ',*:RGB'
set -sa terminal-overrides ',*:sitm=\E[3m'

# Clipboard
set-option -g set-clipboard on
